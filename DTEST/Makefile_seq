# include the environment, compilation, and linking flags

include ../Make_flags
include ../Link_flags

#------------------------------------------------

FSOURCE = ilut.f amux.f

FOBJS = ilut.o amux.o

CSOURCE = driver_seq.c readuc.c shared_utils.c ssrcsr.c 

COBJS = driver_seq.o readuc.o shared_utils.o ssrcsr.o 

DRIVEROBJECTS = $(COBJS) $(FOBJS)

.PHONY: clean veryclean

seq_dprimme: $(COBJS) ddependencies_seq $(TOP)/libprimme.a
	$(CLDR) -o seq_dprimme $(DRIVEROBJECTS) $(LIBDIRS) $(INCLUDE) $(LIBS) $(LDFLAGS) 

driver_seq.o: driver_seq.c
	$(CC) $(LOW_OPT) $(CFLAGS) $(DEFINES) $(INCLUDE) -c driver_seq.c

readuc.o: readuc.c
	$(CC) $(LOW_OPT) $(CFLAGS) $(DEFINES) $(INCLUDE) -c readuc.c

shared_utils.o: shared_utils.c
	$(CC) $(LOW_OPT) $(CFLAGS) $(DEFINES) $(INCLUDE) -c shared_utils.c

ssrcsr.o: ssrcsr.c
	$(CC) $(LOW_OPT) $(CFLAGS) $(DEFINES) $(INCLUDE) -c ssrcsr.c

ilut.o: ilut.f
	$(F77) $(HIGH_OPT) $(FFLAGS) -c ilut.f

amux.o: amux.f
	$(F77) $(HIGH_OPT) $(FFLAGS) -c amux.f

clean:  
	@(\
	echo "     "`pwd`;\
	echo "rm -f *.o";\
	rm -f *.o\
	)

veryclean:
	@(\
	echo "     "`pwd`;\
	echo "rm -f seq_zprimme *.o core";\
	rm -f seq_dprimme *.o core;\
	)

ddependencies_seq:
	gcc -MM $(INCLUDE) $(CSOURCE) > ddependencies_seq

all: seq_dprimme
seq_dprimme: $(DRIVEROBJECTS)
include ddependencies_seq

all_tests: seq_dprimme
	@ok="0";echo "Please wait, this could take a while...";\
	for i in tests/test_??? ; do \
		echo "********** Test $$i ***********"; \
		./seq_dprimme $$i || ok="1"; \
	done > tests.log 2>&1;\
	if test $$ok -eq 0 ; then \
		echo "All tests passed!"; \
	else\
		cat tests.log;\
		echo "Some tests fail. Please consider to send us the file";\
		echo "DTEST/tests.log if the software doesn't work as expected.";\
		exit 1;\
	fi

test: seq_dprimme
	./seq_dprimme tests/test_003
